name: Commit Stage
on:
  push:
    paths-ignore: ['my-java-image/**']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ifeanyichukwuotiwa-sports/config-service
  SERVICE_NAME: config-service
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup JDK Version
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Build, Unit Test And Integration Test
        run: |
          chmod +x gradlew
          ./gradlew clean build --info --stacktrace

      - name: Code Vulnerability Scanner
        uses: anchore/scan-action@v6
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          output-format: sarif
      #          acs-report-enable: true

      - name: Upload Vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Setup tools
        uses: alexellis/setup-arkade@v3
      - name: Install tools
        uses: alexellis/arkade-get@master
        with:
          kubeconform: latest
      - name: Validate Kubernetes manifests
        run: |
          kubeconform --strict k8s/

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4.2.2

      - name: Set up JDK
        uses: actions/setup-java@v4.6.0
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Build Docker Image
        id: BDI
        run: |
          chmod +x gradlew
          ./gradlew clean bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: OCI Image Vulnerability Scanning
        uses: anchore/scan-action@v6
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high

      - name: Upload OCI Image Vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Log into Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_IO_TOKEN }}

      - name: Publish Image to Registry
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}